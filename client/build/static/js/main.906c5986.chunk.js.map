{"version":3,"sources":["assets/spinner.gif","components/Tool/index.js","utils/helpers.js","components/ToolList/index.js","components/CategoryMenu/index.js","pages/Home.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Tool","item","image","name","_id","quantity","className","to","alt","src","count","pluralize","ToolList","currentCategory","useQuery","QUERY_TOOLS","loading","data","tools","length","filter","tool","category","map","key","spinner","CategoryMenu","setCategory","categoryData","QUERY_CATEGORIES","categories","onClick","Home","useState","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","i","Login","props","email","password","formState","setFormState","useMutation","LOGIN","login","error","handleFormSubmit","event","preventDefault","variables","mutationResponse","Auth","console","log","handleChange","target","value","onSubmit","htmlFor","placeholder","type","id","onChange","Signup","ADD_USER","addUser","firstName","lastName","Nav","role","aria-label","loggedIn","href","logout","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.906c5986.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pluralize } from \"../../utils/helpers\"\r\n\r\nfunction Tool(item) {\r\n  const {\r\n    image,\r\n    name,\r\n    _id,\r\n    quantity,\r\n  } = item;\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/tools/${_id}`}>\r\n        <img\r\n          alt={name}\r\n          src={`/images/${image}`}\r\n        />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\r\n        <span></span>\r\n      </div>\r\n      <button>Add to Tool Bag.</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tool;\r\n","export function pluralize(name, count) {\r\n    if (count === 1) {\r\n      return name\r\n    }\r\n    return name + 's'\r\n  }\r\n  ","import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport Tool from '../Tool';\r\nimport { QUERY_TOOLS } from '../../utils/queries';\r\nimport spinner from '../../assets/spinner.gif';\r\n\r\nfunction ToolList({ currentCategory }) {\r\n  const { loading, data } = useQuery(QUERY_TOOLS);\r\n\r\n  const tools = data?.tools || [];\r\n\r\n  function filterTools() {\r\n    if (!currentCategory) {\r\n      return tools;\r\n    }\r\n\r\n    return tools.filter(\r\n      (tool) => tool.category._id === currentCategory\r\n    );\r\n  }\r\n\r\n  if (!tools) {\r\n    return <h3>No Tools Yet</h3>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-2\">\r\n      <h2>Our Tools:</h2>\r\n      {tools.length ? (\r\n        <div className=\"flex-row\">\r\n          {filterTools().map((tool) => (\r\n            <Tool\r\n              key={tool._id}\r\n              _id={tool._id}\r\n              image={tool.image}\r\n              name={tool.name}\r\n              quantity={tool.quantity}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h3>You haven't added any tools yet!</h3>\r\n      )}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToolList;\r\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\n\nfunction CategoryMenu({ setCategory }) {\n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n  const categories = categoryData?.categories || [];\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            setCategory(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React, { useState } from \"react\";\r\nimport ToolList from \"../components/ToolList\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\n\r\nconst Home = () => {\r\n  const [currentCategory, setCategory] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <CategoryMenu setCategory={setCategory} />\r\n      <ToolList currentCategory={currentCategory} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/signup\">← Go to Signup</Link>\r\n\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/login\">← Go to Login</Link>\r\n\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\"></span>\n          ca-TOOL-ogue\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport Home from './pages/Home';\r\n// import Detail from './pages/Detail';\r\n//import NoMatch from './pages/NoMatch';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport Nav from './components/Nav';\r\n//import SavedHistory from './pages/SavedHistory';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <Nav />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n            {/* <Route exact path=\"/savedHistory\" component={SavedHistory} /> */}\r\n            {/* <Route exact path=\"/tools/:id\" component={Detail} /> */}\r\n            {/* <Route component={NoMatch} /> */}\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}